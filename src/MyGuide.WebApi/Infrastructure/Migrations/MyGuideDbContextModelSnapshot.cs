// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyGuide.WebApi.Infrastructure.DataAccess;

#nullable disable

namespace MyGuide.WebApi.Infrastructure.Migrations
{
    [DbContext(typeof(MyGuideDbContext))]
    partial class MyGuideDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MyGuide.WebApi.Core.Domain.Assessment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CriterionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("PlaceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Score")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("CriterionId");

                    b.HasIndex("PlaceId");

                    b.ToTable("Assessments");
                });

            modelBuilder.Entity("MyGuide.WebApi.Core.Domain.Commentary", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Data")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid?>("GuideId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("GuideId");

                    b.ToTable("Commentaries");
                });

            modelBuilder.Entity("MyGuide.WebApi.Core.Domain.Criterion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("GuideId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("MaxScore")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GuideId");

                    b.ToTable("Criteria");
                });

            modelBuilder.Entity("MyGuide.WebApi.Core.Domain.Guide", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Stars")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Guides");
                });

            modelBuilder.Entity("MyGuide.WebApi.Core.Domain.Place", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Coordinates")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid?>("GuideId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("GuideId");

                    b.ToTable("Places");
                });

            modelBuilder.Entity("MyGuide.WebApi.Core.Domain.Assessment", b =>
                {
                    b.HasOne("MyGuide.WebApi.Core.Domain.Criterion", "Criterion")
                        .WithMany()
                        .HasForeignKey("CriterionId");

                    b.HasOne("MyGuide.WebApi.Core.Domain.Place", "Place")
                        .WithMany("Assessments")
                        .HasForeignKey("PlaceId");

                    b.Navigation("Criterion");

                    b.Navigation("Place");
                });

            modelBuilder.Entity("MyGuide.WebApi.Core.Domain.Commentary", b =>
                {
                    b.HasOne("MyGuide.WebApi.Core.Domain.Guide", "Guide")
                        .WithMany()
                        .HasForeignKey("GuideId");

                    b.Navigation("Guide");
                });

            modelBuilder.Entity("MyGuide.WebApi.Core.Domain.Criterion", b =>
                {
                    b.HasOne("MyGuide.WebApi.Core.Domain.Guide", "Guide")
                        .WithMany("Criterions")
                        .HasForeignKey("GuideId");

                    b.Navigation("Guide");
                });

            modelBuilder.Entity("MyGuide.WebApi.Core.Domain.Place", b =>
                {
                    b.HasOne("MyGuide.WebApi.Core.Domain.Guide", "Guide")
                        .WithMany("Places")
                        .HasForeignKey("GuideId");

                    b.Navigation("Guide");
                });

            modelBuilder.Entity("MyGuide.WebApi.Core.Domain.Guide", b =>
                {
                    b.Navigation("Criterions");

                    b.Navigation("Places");
                });

            modelBuilder.Entity("MyGuide.WebApi.Core.Domain.Place", b =>
                {
                    b.Navigation("Assessments");
                });
#pragma warning restore 612, 618
        }
    }
}
